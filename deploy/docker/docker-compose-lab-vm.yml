version: '3.8'

services:

  node-exporter-1:
    image: prom/node-exporter:latest
    container_name: node-exporter-1
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

  node-exporter-2:
    image: prom/node-exporter:latest
    container_name: node-exporter-2
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

  vmagent-1:
    container_name: vmagent-1
    image: victoriametrics/vmagent:latest
    depends_on:
      - "victoriametrics-1"
    expose:
      - 8429
    volumes:
      - vm_data1:/vmagentdata
      - ./servers/server1/vmetrics/vmagent-prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics-1:8428/api/v1/write"
    networks:
      - monitoring
    restart: unless-stopped

  vmagent-2:
    container_name: vmagent-2
    image: victoriametrics/vmagent:latest
    depends_on:
      - "victoriametrics-2"
    expose:
      - 8429
    volumes:
      - vm_data2:/vmagentdata
      - ./servers/server2/vmetrics/vmagent-prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics-2:8428/api/v1/write"
    networks:
      - monitoring
    restart: unless-stopped

  victoriametrics-1:
    container_name: victoriametrics-1
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
      - "2003:2003"
      - "4242:4242"
    volumes:
      - vm_data1:/storage
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
    networks:
      - monitoring
    restart: always

  victoriametrics-2:
    container_name: victoriametrics-2
    image: victoriametrics/victoria-metrics
    ports:
      - "8429:8428"
      - "2004:2003"
      - "4243:4242"
    volumes:
      - vm_data2:/storage
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
    networks:
      - monitoring
    restart: always

  promxy:
    container_name: promxy
    image: quay.io/jacksontj/promxy
    hostname: promxy
    build:
      context: .
      dockerfile: Dockerfile.promxy
    ports:
      - "8082:8082"
    volumes:
#      - ./../../cmd:/cmd
      - logvolume01:/var/log
      - ./promxy:/promxy
    command:
      - --config=/promxy/config.yaml
      - --log-level=info
      - --web.enable-lifecycle
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - monitoring

volumes:
  prom_data1: {}
  prom_data2: {}
  logvolume01: {}
  vmagent_data1: {}
  vmagent_data2: {}
  vm_data1: {}
  vm_data2: {}

networks:
  monitoring:
    driver: bridge
